{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/WEHI-SODA-Hub/spatialvpt/master/nextflow_schema.json",
    "title": "WEHI-SODA-Hub/spatialvpt pipeline parameters",
    "description": "Segmentation and QC workflow for MERSCOPE",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "hidden": true
                },
                "sample": {
                    "type": "string",
                    "description": "Sample name.",
                    "fa_icon": "fas fa-file-signature"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "segmentation_options": {
            "title": "Segmentation options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "Segmentation-specific options.",
            "properties": {
                "algorithm_json": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "test/json",
                    "pattern": "^\\S+\\.(json)$",
                    "description": "Path to the JSON file containing the algorithm parameters.",
                    "help_text": "The JSON file should contain the parameters for the segmentation.",
                    "fa_icon": "fas fa-file-csv"
                },
                "images_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to the directory containing the images.",
                    "help_text": "The directory should contain the images to be segmented.",
                    "fa_icon": "fas fa-folder-open"
                },
                "images_regex": {
                    "type": "string",
                    "description": "Regex pattern for selecting images.",
                    "help_text": "Optional regex pattern for selecting images in the images directory."
                },
                "um_to_mosaic_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(csv)$",
                    "description": "Path to the CSV file containing the micron to mosaic conversion.",
                    "help_text": "The CSV file should contain the conversion from micron to mosaic coordinates.",
                    "fa_icon": "fas fa-file-csv"
                },
                "detected_transcripts": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(csv)$",
                    "description": "Path to the CSV file containing the detected transcripts.",
                    "help_text": "The CSV file should contain the detected transcripts.",
                    "fa_icon": "fas fa-file-csv"
                },
                "custom_weights": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "application/octet-stream",
                    "pattern": "^\\S+$",
                    "description": "Path to the custom weights file.",
                    "help_text": "Optional file containing custom weights for segmentation."
                },
                "update_vzg": {
                    "type": "boolean",
                    "description": "Create updated VZG file after segmentation.",
                    "default": true,
                    "fa_icon": "fas fa-sync"
                },
                "input_vzg": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "application/octet-stream",
                    "pattern": "^\\S+\\.(vzg)$",
                    "description": "Path to the VZG file for visualisation in MERSCOPE visualiser.",
                    "help_text": "The CSV file should contain the input data for the segmentation.",
                    "fa_icon": "fas fa-file"
                },
                "tile_size": {
                    "type": "integer",
                    "description": "Tile size for splitting large images.",
                    "default": 4096,
                    "fa_icon": "fas fa-th-large"
                },
                "tile_overlap": {
                    "type": "integer",
                    "description": "Overlap between tiles.",
                    "default": 400,
                    "fa_icon": "fas fa-th-large"
                }
            }
        },
        "report_options": {
            "title": "Report options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "Options for generating report.",
            "properties": {
                "red_stain_name": {
                    "type": "string",
                    "description": "Stain name for red channel.",
                    "fa_icon": "fas fa-palette"
                },
                "green_stain_name": {
                    "type": "string",
                    "description": "Stain name for green channel.",
                    "fa_icon": "fas fa-palette"
                },
                "blue_stain_name": {
                    "type": "string",
                    "description": "Stain name for blue channel.",
                    "fa_icon": "fas fa-palette"
                },
                "transcript_count_threshold": {
                    "type": "integer",
                    "description": "Cell transcript count threshold for computing metrics and clustering.",
                    "fa_icon": "fas fa-filter"
                },
                "volume_filter_threshold": {
                    "type": "integer",
                    "description": "Cell volume threshold for computing metrics and clustering.",
                    "fa_icon": "fas fa-filter"
                }
            }
        },
        "report_only_options": {
            "title": "Report only options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "Options for generating report without running segmentation.",
            "properties": {
                "report_only": {
                    "type": "boolean",
                    "description": "Generate report only (no segmentation). Requires all input files to be specified in sample sheet.",
                    "fa_icon": "fas fa-sync"
                },
                "metadata": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "test/csv",
                    "pattern": "^\\S+\\.(csv)$",
                    "description": "Path to the CSV file containing cell metadata.",
                    "help_text": "Optional input for generating report only.",
                    "fa_icon": "fas fa-file-csv"
                },
                "entity_by_gene": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "test/csv",
                    "pattern": "^\\S+\\.(csv)$",
                    "description": "Path to the CSV file containing entity by gene.",
                    "help_text": "Optional input for generating report only.",
                    "fa_icon": "fas fa-file-csv"
                },
                "boundaries": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "application/octet-stream",
                    "pattern": "^\\S+\\.(parquet)$",
                    "description": "Path to parquet file containing boundaries.",
                    "help_text": "Optional input for generating report only.",
                    "fa_icon": "fas fa-file"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/segmentation_options"
        },
        {
            "$ref": "#/definitions/report_options"
        },
        {
            "$ref": "#/definitions/report_only_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
